# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see readme (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

name: Self Hosted

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - parameter_set

jobs:
  industrial_ci:
    strategy:
      matrix:
        env:
          - ROS_DISTRO: galactic
            ROS_REPO: main
    env:
      BEFORE_BUILD_TARGET_WORKSPACE: ./.ci.install_absl
      AFTER_RUN_TARGET_TEST: ${{ matrix.env.CCOV && './.ci.prepare_codecov' || '' }}
      TARGET_CMAKE_ARGS: -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS=-fsanitize=address -DCMAKE_CXX_FLAGS=-fsanitize=address
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      BASEDIR: ${{ github.workspace }}/.work
      CACHE_PREFIX: ${{ matrix.env.ROS_DISTRO }}-${{ matrix.env.ROS_REPO }}
      CLANG_TIDY_BASE_REF: ${{ github.base_ref || github.ref }}
      BEFORE_CLANG_TIDY_CHECKS: (cd $TARGET_REPO_PATH; clang-tidy --list-checks)
      CC: ${{ matrix.env.CLANG_TIDY && 'clang' }}
      CXX: ${{ matrix.env.CLANG_TIDY && 'clang++' }}
      ADDITIONAL_DEBS: ${{ matrix.env.CLANG_TIDY && 'clang' }}

    name: ${{ matrix.env.ROS_DISTRO }}-${{ matrix.env.ROS_REPO }}${{ matrix.env.CCOV && ' + ccov' || ''}}${{ matrix.env.CLANG_TIDY && ' + clang-tidy' || '' }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      # The target directory cache doesn't include the source directory because
      # that comes from the checkout.  See "prepare target_ws for cache" task below
      # - name: cache target_ws
      #   uses: pat-s/always-upload-cache@v2.1.5
      #   with:
      #     path: ${{ env.BASEDIR }}/target_ws
      #     key: target_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}-${{ github.run_id }}
      #     restore-keys: |
      #       target_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('**/CMakeLists.txt', '**/package.xml') }}
      - name: Local cache for ccache
        uses: MasterworksIO/action-local-cache@main
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ env.CACHE_PREFIX }}
      - name: industrial_ci
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{ matrix.env }}
      - name: upload test artifacts (on failure)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: ${{ env.BASEDIR }}/target_ws/**/test_results/**/*.xml
      # - name: upload codecov report
      #   uses: codecov/codecov-action@v1
      #   if: ${{ matrix.env.CCOV }}
      #   with:
      #     files: ${{ env.BASEDIR }}/coverage.info
      # - name: prepare target_ws for cache
      #   if: ${{ always() && ! matrix.env.CCOV }}
      #   run: |
      #     du -sh ${{ env.BASEDIR }}/target_ws
      #     find ${{ env.BASEDIR }}/target_ws -wholename '*/test_results/*' -delete
      #     rm -rf ${{ env.BASEDIR }}/target_ws/src
      #     du -sh ${{ env.BASEDIR }}/target_ws
